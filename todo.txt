
in CS gen, br needs to do stack cleanup

why doens't clang mark exports

return value from blocks ?

still some problems in roundtripping binary format that
might be important, not sure

the idea here is to get a CS (or fs) generator working
so that the layer below it is more proven.  that
layer includes stuff like looking up attributes by
funcidx, etc.  that layer should be roughly the same
one we need to gen CIL.

gen fs instead of cs?  but fs lacks goto.

need consistency about whether to pass around
wrapped indexes or just the ints

consider possibility of just using int everywhere
a uint32 is used, because that's just how .NET
does things, with array indexes and such being
int instead of unsigned

might want to abstract creation and lookup of
names for locals instead of just pN

in stringify for wat, omit memarg if defaults

consider using checked int operations in leb128 code

best practice for formatting fs, type annotations, colon

def and read and write and wat and cs could be in separate assemblies?

review naming of def record fields.  compare to spec.
and conventions, lower case, etc.

